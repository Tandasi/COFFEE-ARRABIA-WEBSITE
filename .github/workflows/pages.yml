name: Deploy Client to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

defaults:
  run:
    shell: bash

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build:client
          mkdir -p pages-out
          # copy all built files (preserve dotfiles)
          cp -r dist/public/. pages-out/ || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages-out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      contents: read
    steps:
      - name: Download built artifact (diagnostic)
        uses: actions/download-artifact@v4
        with:
          path: pages-out

      - name: List artifact contents (diagnostic)
        run: |
          echo "Listing pages-out contents"
          ls -la pages-out || true

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional fallback that pushes `pages-out` to the gh-pages branch using a
  # Personal Access Token (PAT). This runs only if you create the repository
  # secret `GH_PAGES_PAT`. It is useful when repository/org policies prevent
  # the normal GitHub Pages workflow from publishing (the deploy job may fail
  # at "Set up job" due to org restrictions). To enable, add a repo secret
  # named `GH_PAGES_PAT` with a token that has `repo` or `public_repo` scope.
  gh-pages-fallback:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.GH_PAGES_PAT != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to gh-pages (fallback, uses GH_PAGES_PAT)
        env:
          REPO: ${{ github.repository }}
          PAT: ${{ secrets.GH_PAGES_PAT }}
        run: |
          set -euo pipefail
          TMPDIR=$(mktemp -d)
          echo "Using temporary directory: $TMPDIR"
          git clone --depth=1 --branch gh-pages https://x-access-token:${PAT}@github.com/${REPO} $TMPDIR || (
            echo "gh-pages branch doesn't exist yet, creating new orphan branch" &&
            git clone https://x-access-token:${PAT}@github.com/${REPO} $TMPDIR
          )
          rm -rf $TMPDIR/*
          cp -r pages-out/. $TMPDIR/ || true
          cd $TMPDIR
          git add -A
          git commit -m "ci(gh-pages): deploy from workflow ${GITHUB_RUN_ID}" || echo "No changes to commit"
          git push https://x-access-token:${PAT}@github.com/${REPO} HEAD:gh-pages --force
